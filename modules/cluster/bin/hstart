#!/bin/bash
#
# Hierarchical cluster start.
#
# arg1: (optional) user on remote machines
#
# Based on data in $CLUSTER_HOME/conf/active-cluster-hierarchy.txt, start this node and its children.
#

HTEXT="$HOME/cluster/conf/active-cluster-hierarchy.txt";
MYNAME=`uname -n | tr "[:upper:]" "[:lower:]"`;
USER="$1";

test -n "$USER" && USER="${USER}@";

# strip -N from machine-name-N (=arg1)
function fixName () {
  echo `expr match "$1" "^\(.\\+\)\(-[[:digit:]]\\+\|$\)"`;
}

# get N from machine-name-N (=arg1), returning "1" if "-N" is missing.
function fixNumber () {
  result=`expr match "$1" "^.\\+-\([[:digit:]]\\+\|$\)"`;
  test -z "$result" && result=1;
  echo "$result";
}

function doStart() {
  if test $# -gt 0; then
    CURNAME=`fixName $1`;
    MAXNUM=`fixNumber $1`;
    CURNUM=$MAXNUM;
    DEST=${USER}${CURNAME};

    while test $CURNUM -gt 0; do
      UIDNUM=$(($MAXNUM - $CURNUM));
      echo "($MYNAME)starting #$UIDNUM on $DEST"
      ssh $DEST "cd ~/cluster/bin;./startClusterNode $UIDNUM;";
      CURNUM=$(($CURNUM - 1));
    done

    # recurse on child that just started
    ssh $DEST "cd ~/cluster/bin;./hstart;";

    # shift and recurse for remaining children
    shift;
    doStart $@
  fi
}

function doStartIfMine() {
  CURNAME=`fixName $1`;

  if test "$CURNAME" == "$MYNAME"; then
    # it's mine!
    shift;
    echo "`doStart $@;`";
  fi
}

if test -s $HTEXT; then
  cat $HTEXT | while read line; do
    startOutput=`doStartIfMine $line;`;
    test -n "$startOutput" && echo "$startOutput";
  done;
else
  echo "($MYNAME)FAILED: can't find file '$HTEXT'"
fi
