#!/bin/bash
#
# Hierarchical cluster start.
#
# Based on data in $CLUSTER_HOME/conf/active-cluster-hierarchy.txt, start this node and its children.
#

HTEXT="$HOME/cluster/conf/active-cluster-hierarchy.txt";
MYNAME=`uname -n | tr "[:upper:]" "[:lower:]"`;

# get name, called when IFS=- returns name part of name-num
function getName() {
  echo "$1";
}

# get number, called when IFS=- returns name part of name-num
function getNumber() {
  NUMBER=$2;
  test -z "$NUMBER" && NUMBER=1;
  echo "$NUMBER";
}

# set IFS for getName, getName, restore IFS
function fixName () {
  NORMAL_IFS="$IFS";
  IFS="-";
  echo `getName $1`;
  IFS="$NORMAL_IFS";
}

# set IFS for getNumber, getNumber, restore IFS
function fixNumber () {
  NORMAL_IFS="$IFS";
  IFS="-";
  echo `getNumber $1`;
  IFS="$NORMAL_IFS";
}

function doStart() {
  if test $# -gt 0; then
    CURNAME=`fixName $1`;
    MAXNUM=`fixNumber $1`;
    CURNUM=$MAXNUM;

    while test $CURNUM -gt 0; do
      UIDNUM=$(($MAXNUM - $CURNUM));
      echo "($MYNAME)starting #$UIDNUM on $CURNAME"
      ssh $CURNAME "cd ~/cluster/bin;./startClusterNode $UIDNUM;";
      CURNUM=$(($CURNUM - 1));
    done

    # recurse on child that just started
    ssh $CURNAME "cd ~/cluster/bin;./hstart;";

    # shift and recurse for remaining children
    shift;
    doStart $@
  fi
}

function doStartIfMine() {
  CURNAME=`fixName $1`;

  if test "$CURNAME" == "$MYNAME"; then
    # it's mine!
    shift;
    echo "`doStart $@;`";
  fi
}

if test -s $HTEXT; then
  cat $HTEXT | while read line; do
    startOutput=`doStartIfMine $line;`;
    test -n "$startOutput" && echo "$startOutput";
  done;
else
  echo "($MYNAME)FAILED: can't find file '$HTEXT'"
fi
