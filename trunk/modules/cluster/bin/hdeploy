#!/bin/bash
#
# Hierarchical deployment.
#
# Based on data in $HOME/cluster/conf/active-cluster-hierarchy.txt, rsync deployment to this node's children.
#
# arg1: (optional) user on remote machines
#
# NOTE: uses env CLUSTER_CLASSES if defined.
#

HTEXT="$HOME/cluster/conf/active-cluster-hierarchy.txt";
MYNAME=`uname -n | tr "[:upper:]" "[:lower:]"`;
USER="$1";

test -n "$USER" && USER="${USER}@";

classes="$CLUSTER_CLASSES";
if test -z "$classes"; then
  classes="build/classes";
fi

# strip -N from machine-name-N (=arg1)
function fixName () {
  echo `expr match "$1" "^\(.\\+\)\(-[[:digit:]]\\+\|$\)"`;
}

function doRsync() {
  if test $# -gt 0; then
    CURNAME=`fixName $1`;
    DEST=${USER}${CURNAME};

    if test "$DEST" != "$MYNAME" && test "$DEST" != "localhost"; then
      test -e ../build || mkdir ../build;
      echo "($MYNAME)rsyncing ../bin ../conf ../lib ../resources ../build ../src/jsp $DEST:cluster/;";
      rsync -Laz --delete --delete-excluded ../bin ../conf ../lib ../resources ../build $DEST:cluster/
			if test -e ../src/jsp; then
        rsync -az --delete --delete-excluded ../src/jsp $DEST:cluster/src/;
      fi;
      ssh $DEST "cd ~/cluster/bin;./hdeploy";
    fi

    # shift and recurse for remaining children
    shift;
    doRsync $@
  fi
}

function doRsyncIfMine() {
  CURNAME=`fixName $1`;

  if test "$CURNAME" == "$MYNAME"; then
    # it's mine!
    shift;
    echo "`doRsync $@;`";
  fi
}

if test -s $HTEXT; then
  cat $HTEXT | while read line; do
    rsyncOutput=`doRsyncIfMine $line;`;
    test -n "$rsyncOutput" && echo "$rsyncOutput";
  done;
else
  echo "($MYNAME)FAILED: can't find file '$HTEXT'"
fi
