package org.sd.cluster.protolog.codegen;

option java_package = "org.sd.cluster.protolog.codegen";
option java_outer_classname = "ProtoLogProtos";

// container for an (optionally typed, possibly multivalued) attribute
message Attribute {
  optional string type = 1;
  repeated string stringData = 2;
  repeated int32 intData = 3 [packed=true];
  repeated int64 longData = 4 [packed=true];
  repeated bool boolData = 5;
  repeated bytes bytesData = 6;
}

// container for a log header message
message LogHeader {
  required int64 startTime = 1;
  optional string clusterdef = 2;
  optional int32 jvmNum = 3;
  optional string user = 4;
  optional string machine = 5;
  optional string ip = 6;
  optional string logID = 7;

  repeated Attribute attribute=8;
}

// container for a log entry
message GenericLogEntry {
  required int64 timestamp = 1;
  repeated Attribute attribute = 2;
}

// container to identify an event
message EventId {
  // numeric identifier for event (unique at least by who/what)
  required uint64 id = 1;

  // who is generating the event (e.g. client ID or IP)
  optional string who = 2;

  // what is generating the event (usually a qualified classname)
  optional string what = 3;
}

// container for a log event entry
message EventEntry {
  required int64 timestamp = 1;
  required EventId id = 2;

  enum EventType {
    START = 0;

    // all of the following are "end"s
    SUCCEED = 1;
    ERROR = 2;
    KILL = 3;
    TIMEOUT = 4;
  }
  
  // the type of this event entry
  required EventType type = 3;

  // attributes accompanying this entry
  // (e.g. loggable results, error attributes, or why killed)
  repeated Attribute attribute = 4;

  // optional message(s) possible with any event type
  repeated string message = 5;
}
